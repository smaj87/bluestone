@use 'commons/styles/functions' as cssFunc;

$loading-page-progress-height: cssFunc.calc-size(24rem);
$loading-page-progress-height--md: cssFunc.calc-size(32rem);
$system-font: system-ui, Arial, sans-serif;
$screenMdAbove: '' !default;

.loading-page {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: cssFunc.calc-size(16rem);
  padding: cssFunc.calc-size(16rem);
  width: 100%;
  min-width: 0;
  height: 100vh;
  height: 100dvh;
  font-family: $system-font;
  background: var(--lp-bg--light);
  color: var(--lp-txt--light);

  &.--dark-mode {
    background: var(--lp-bg--dark);
    color: var(--lp-txt--dark);
  }
}

.loading-page-content {
  display: grid;
  grid-template-columns: 1fr;
  justify-content: center;
  align-items: center;
  grid-row-gap: cssFunc.calc-size(16rem);

  &__image {
    display: flex;
    justify-content: center;
    align-items: center;

    svg {
      width: cssFunc.calc-size(128rem);
      height: cssFunc.calc-size(128rem);

      @media screen and (min-width: $screenMdAbove) {
        width: cssFunc.calc-size(256rem);
        height: cssFunc.calc-size(256rem);
      }
    }
  }

  h1 {
    font-weight: 500;
    font-size: cssFunc.calc-size(24rem);
    font-family: $system-font;

    @media screen and (min-width: $screenMdAbove) {
      font-size: cssFunc.calc-size(48rem);
    }
  }
}

.progress {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-inline: auto;
  width: 100%;
  max-width: cssFunc.calc-size(256rem);
  height: $loading-page-progress-height;
  background: var(--lp-progress-bg--light);
  border-radius: cssFunc.calc-size(3rem);
  overflow: hidden;

  .--dark-mode & {
    background: var(--lp-progress-bg--dark);
  }

  @media screen and (min-width: $screenMdAbove) {
    height: $loading-page-progress-height--md;
  }
}

.progress-bar {
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background-size: $loading-page-progress-height $loading-page-progress-height;
  transition: width 500ms linear;
  will-change: width;
  animation: progress-bar-stripes 2s linear infinite;

  .--onet & {
    background-color: var(--lp-progress-bar-bg--light);
    background-image: linear-gradient(45deg, var(--lp-progress-bar-bg--stripes--light) 25%, transparent 25%, transparent 50%, var(--lp-progress-bar-bg--stripes--light) 50%, var(--lp-progress-bar-bg--stripes--light) 75%, transparent 75%, transparent);
  }

  .--gazeta & {
    background-color: var(--lp-progress-bar-bg--gazeta);
    background-image: linear-gradient(45deg, var(--lp-progress-bar-bg--stripes--gazeta) 25%, transparent 25%, transparent 50%, var(--lp-progress-bar-bg--stripes--gazeta) 50%, var(--lp-progress-bar-bg--stripes--gazeta) 75%, transparent 75%, transparent);
  }

  .--dark-mode & {
    background-color: var(--lp-progress-bar-bg--dark);
    background-image: linear-gradient(45deg, var(--lp-progress-bar-bg--stripes--dark) 25%, transparent 25%, transparent 50%, var(--lp-progress-bar-bg--stripes--dark) 50%, var(--lp-progress-bar-bg--stripes--dark) 75%, transparent 75%, transparent);
  }

  @media screen and (min-width: $screenMdAbove) {
    background-size: $loading-page-progress-height--md $loading-page-progress-height--md;
    animation-name: progress-bar-stripes--md;
  }
}

.progress-counter {
  position: relative;
  z-index: 1;
  font-weight: 700;
  font-size: cssFunc.calc-size(14rem);

  .--onet & {
    color: var(--lp-progress-txt--light);
  }

  .--gazeta & {
    color: var(--lp-progress-txt--gazeta);
  }

  .--dark-mode & {
    color: var(--lp-progress-txt--dark);
  }

  @media screen and (min-width: $screenMdAbove) {
    font-size: cssFunc.calc-size(16rem);
  }
}

@keyframes progress-bar-stripes {
  from { background-position: $loading-page-progress-height 0; }
  to { background-position: 0 0; }
}

@keyframes progress-bar-stripes--md {
  from { background-position: $loading-page-progress-height--md 0; }
  to { background-position: 0 0; }
}
